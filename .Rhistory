download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
load(url("http://bit.ly/dasi_gss_data"))
names(gss)
tail(gss)
plot(gss$marital, gss$age)
lineplot(gss$marital, gss$age)
?plot
plot(gss$marital, gss$age, type = h)
plot(gss$marital, gss$age, type = "h")
plot(gss$marital, gss$age, type = "l")
plot(gss$marital, gss$age, type = "l")
?plot
plot(gss$age,gss$marital, type = "p")
plot(gss$age,gss$marital, type = "l")
plot(gss$age,gss$marital, type = "h")
lineplot(gss$marital, gss$age)
plot(gss$marital, gss$age)
---
title: "project title"
load(url(http://bit.ly/dasi_gss_data))
load(url("http://bit.ly/dasi_gss_data"))
names()
names(gss)
age = gss$age
marital = gss$marital
?plot
plot(marital,age)
histogram(age)
hist(age)
?table
table(age,marital)
install.packages("KernSmooth")
library(KernSmooth)
getwd()
?select
?mean
library(swirl)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
students4
submit()
submit()
submit()
submit()
?unique
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
submit()
?group_by
submit()
library(swirl)
swirl()
exit
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12,1975")
mdy("March 12,1975")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("//192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours(17),minutes(34))
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz = "Singapore")
last_time
?new_interval
how_long<- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
install_from_swirl
install_from_swirl("Exploratory Data Analysis",dev=FALSE,mirror="github")
swirl()
install.packages("kniter")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
x<-read.csv("activity.csv")
setwd("Desktop/Data Science")
dir()
setwd("RepData_PeerAssessment1")
x<-read.csv("activity.csv")
y<-aggregate(x$steps ~ x$interval, FUN="mean")
z<-aggregate(x$steps ~ x$interval, FUN="median")
x2<-x
for(i in 1:nrow(x2)){
if (is.na(x2[i,1])){
x2[i,1] <- z[which(z[[1]]==x2[i,3]),2]
}
}
x3<-x2
x3$date <- as.Date(x3$date)
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
x3$wDay <- factor((weekdays(x3$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
X4 <- split(x3,x3$wDay)
X4
summarize(X4)
summary(X4)
X4$weekend
summary(X$)
summary(X4)
y_weekdays<-aggregate(x_weekdays$steps ~ x_weekdays$interval, FUN="mean")
x_split <- split(x3,x3$wDay)
x_weekdays <- x_split$weekday
x_weekends <- x_split$weekend
y_weekdays<-aggregate(x_weekdays$steps ~ x_weekdays$interval, FUN="mean")
xyplot(y_weekends[[1]]~y_weekends[[2]])
library(lattice)
xyplot(y_weekends[[1]]~y_weekends[[2]])
xyplot(y_weekdays[1]]~y_weekdays[[2]])
xyplot(y_weekdays[[1]]~y_weekdays[[2]])
densityplot(y_weekdays[[1]]~y_weekdays[[2]])
densityplot(y_weekdays[[2]]~y_weekdays[[1]])
xyplot(y_weekdays[[2]]~y_weekdays[[1]])
loess(y_weekdays[[2]]~y_weekdays[[1]])
xyplot(steps ~ interval| date,
data = x3
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
x3
xyplot(steps ~ interval| date,
data = x3
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
head(x3)
xyplot(steps ~ interval| date,
data = x3
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot(steps ~ interval| date, data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval| date, data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(2,1))
xyplot(steps ~ interval| date, data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval| levels(x3$date), data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval| levels(x3$date), data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(2,2))
xyplot(steps ~ interval| levels(date), data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval| levels(wkDay), data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval| levels(wDay), data = x3, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
x_split <- split(x3,x3$wDay)
x_weekdays <- x_split$weekday
x_weekends <- x_split$weekend
y_weekdays<-aggregate(x_weekdays$steps ~ x_weekdays$interval, FUN="mean")
summary(x3)
w<-aggregate(x3$steps ~ x3$interval + x3$wDay, FUN="mean")
head(w)
xyplot(x3$steps ~ x3$interval| levels(x3$wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
w
xyplot(x3$steps ~ x3$interval| levels(x3$wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(x3$steps ~ x3$interval| levels(x3$wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(w[[3]] ~ w[[1]]| levels(w[[2]]), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(w[[3]] ~ w[[1]] | levels(w[[2]]), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(w[[1]] ~ w[[3]] | levels(w[[2]]), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(w[[3]] ~ w[[1]] | levels(w[[2]]), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
summary(w)
names(w)
names(x) <- ("interval","wDay","steps")
names(w) <- ("interval","wDay","steps")
names(w) <- c(interval,wDay,steps)
names(w) <- c("interval","wDay","steps")
names(w)
summary(w)
xyplot(steps ~ interval | levels(w$wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval | levels(wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
w<-aggregate(x3$steps ~ x3$interval + x3$wDay + x3$date, FUN="mean")
summary(w)
head(x)
head(w)
w<-aggregate(x3$steps ~ x3$interval + x3$wDay, FUN="mean")
view(w)
display(w)
w
hist(w$interval)
w$interval
w<-aggregate(x3$steps ~ x3$interval + x3$wDay, FUN="mean")
names(w) <- c("interval","wDay","steps")
hist(w$interval)
hist(w$interval==0)
w$interval==0
sum(w$interval==0)
sum(w$interval==1)
sum(w$interval==5)
sum(w$interval==105)
sum(w$interval==205)
sum(w$interval==235)
xyplot(steps ~ interval | levels(wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps ~ interval | levels(wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps~interval|levels(wDay), data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
xyplot(steps~interval|wDay, data = w, type = "l", xlab = "Interval", ylab = "Number of steps", layout=c(1,2))
